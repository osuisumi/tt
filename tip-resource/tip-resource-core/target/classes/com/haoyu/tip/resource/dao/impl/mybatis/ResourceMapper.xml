<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haoyu.tip.resource.dao.impl.mybatis.ResourceMapper">
	<resultMap id="BaseResultMap" type="com.haoyu.tip.resource.entity.Resources">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="TITLE" property="title" jdbcType="VARCHAR" />
		<result column="SUMMARY" property="summary" jdbcType="VARCHAR" />
		<result column="TYPE" property="type" jdbcType="VARCHAR" />
		<result column="STATE" property="state" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="INTEGER" />
		<result column="CREATOR" property="creator.id" jdbcType="VARCHAR" />
		<result column="REAL_NAME" property="creator.realName" jdbcType="VARCHAR" />	
		<result column="AVATAR" property="creator.avatar" jdbcType="VARCHAR" />	
		<result column="BELONG" property="belong" jdbcType="VARCHAR" />	
		<result column="PRIVILEGE" property="privilege" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="creator.deptName" jdbcType="VARCHAR" />	
		
		<result column="STAGE" property="resourceExtend.stage" jdbcType="VARCHAR" />
		<result column="SUBJECT" property="resourceExtend.subject" jdbcType="VARCHAR" />
		<result column="GRADE" property="resourceExtend.grade" jdbcType="VARCHAR"/>
		<result column="TB_VERSION" property="resourceExtend.tbVersion" jdbcType="VARCHAR"/>
		<result column="CHAPTER" property="resourceExtend.chapter" jdbcType="VARCHAR"/>
		<result column="SECTION" property="resourceExtend.section" jdbcType="VARCHAR"/>
		<result column="EXTEND_TYPE" property="resourceExtend.type" jdbcType="VARCHAR" />
		<result column="AUTHOR" property="resourceExtend.author" jdbcType="VARCHAR" />
		<result column="SOURCE" property="resourceExtend.source" jdbcType="VARCHAR" />
		<result column="ISSUE_DATE" property="resourceExtend.issueDate" jdbcType="DATE"/>
		<result column="B_INDEX" property="resourceExtend.bIndex" jdbcType="VARCHAR"/>
		<result column="EVALUATE_RESULT" property="resourceExtend.evaluateResult" jdbcType="DECIMAL" />
		<result column="PRICE" property="resourceExtend.price" jdbcType="DECIMAL" />
		<result column="COVER_URL" property="resourceExtend.coverUrl" jdbcType="VARCHAR" />
		<result column="IS_ORIGINAL" property="resourceExtend.isOriginal" jdbcType="VARCHAR" />
		<result column="PREVIEW_URL" property="resourceExtend.previewUrl" jdbcType="VARCHAR"/>
		
		
		<collection property="resourceRelations" ofType="com.haoyu.tip.resource.entity.ResourceRelation">
	    	<id property="id" column="RESOURCE_RELATION_ID"/>
	    	<result property="browseNum" column="BROWSE_NUM" jdbcType="INTEGER"/>
	    	<result property="replyNum" column="REPLY_NUM" jdbcType="INTEGER" />
	    	<result property="downloadNum" column="DOWNLOAD_NUM" jdbcType="INTEGER"/>
	    	<result property="fileNum" column="FILE_NUM" jdbcType="DECIMAL"/>
	    	<result property="supportNum" column="SUPPORT_NUM" jdbcType="DECIMAL" />
	    	<result property="relation.id" column="RELATION_ID" jdbcType="VARCHAR" />	
	    	<result property="relation.type" column="RELATION_TYPE"  jdbcType="VARCHAR" />	
	    </collection>
	    
	    <collection property="fileInfos" ofType="com.haoyu.sip.file.entity.FileInfo">
	    	<id column="FILE_INFO_ID" property="id" jdbcType="VARCHAR"></id>
	    	<result column="FILE_INFO_NAME" property="fileName" jdbcType="VARCHAR"/>
	    	<result column="FILE_INFO_URL" property="url" jdbcType="VARCHAR"/>
	    	<result column="FILE_INFO_SIZE" property="fileSize" jdbcType="DECIMAL" />
	    </collection>
	</resultMap>
	<sql id="Base_Column_List">
		ID, TITLE, SUMMARY, CREATOR, TYPE, CREATE_TIME , BELONG ,PRIVILEGE
	</sql>
	<select id="select" parameterType="map" resultMap="BaseResultMap">
		select
			R.ID,
			R.TITLE,
			R.SUMMARY,
			R.CREATOR,
			R.TYPE,
			R.CREATE_TIME,
			R.BELONG,
			R.PRIVILEGE,
			RR.ID RESOURCE_RELATION_ID,
			RR.RELATION_ID,
			RR.BROWSE_NUM,
			RR.DOWNLOAD_NUM,
			RR.SUPPORT_NUM,
			RR.FILE_NUM,
			RR.TYPE RELATION_TYPE,
			RE.STAGE,
			RE.SUBJECT,
			RE.GRADE,
			RE.TB_VERSION,
			RE.CHAPTER,
			RE.SECTION,
			RE.TYPE EXTEND_TYPE,
			RE.AUTHOR,RE.SOURCE,RE.ISSUE_DATE,RE.B_INDEX,RE.EVALUATE_RESULT,RE.PRICE,RE.COVER_URL,RE.IS_ORIGINAL,RE.PREVIEW_URL,
			(select BUV.REAL_NAME from BASE_USER_VIEW BUV where BUV.ID = R.CREATOR) REAL_NAME,
			(select BUV.DEPT_NAME from BASE_USER_VIEW BUV where BUV.ID = R.CREATOR) DEPT_NAME
		from
			RESOURCES R
		left join RESOURCE_RELATION RR on R.ID = RR.RESOURCE_ID and RR.IS_DELETED = 'N'
		left join RESOURCE_EXTEND RE on R.ID = RE.RESOURCE_ID
		where
			R.IS_DELETED = 'N'
		<if test="state!=null and state!=''">
			and R.STATE=#{state,jdbcType=VARCHAR}
		</if>
		<if test="title!=null and title!=''">
			and R.TITLE like '%${title}%'
		</if>
		<if test="relationType!=null and relationType!=''">
			and RR.TYPE=#{relationType,jdbcType=VARCHAR}
		</if>
		<if test="subject !=null and subject != ''">
			and RE.SUBJECT=#{subject}
		</if>
		<if test="stage != null and stage != ''">
			and RE.STAGE=#{stage}
		</if>
		<if test="grade != null and grade != ''">
			and RE.GRADE = #{grade}
		</if>
		<if test="resourceExtendType != null and resourceExtendType != ''">
			and RE.TYPE = #{resourceExtendType,jdbcType=VARCHAR}			
		</if>
		<if test="version != null and version != ''">
			and RE.TB_VERSION = #{version,jdbcType=VARCHAR}
		</if>
		<if test="section !=null and section != ''">
			and RE.SECTION like concat(#{section,jdbcType=VARCHAR},'%')
		</if>
		<if test="bIndex != null and bIndex != ''">
			and RE.B_INDEX like concat(#{bIndex,jdbcType=VARCHAR},'%')
		</if>
		<if test="prize !=null and prize != ''">
			and RE.PRIZE=#{prize}
		</if>
		<if test="relationTypes != null and relationTypes.size > 0">
			and RR.TYPE in 
			<foreach collection="relationTypes" open="(" close=")" item="item" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="type!=null and type != ''">
			and R.TYPE=#{type,jdbcType=VARCHAR}
		</if>
		<if test="creator!=null and creator!=''">
			and R.CREATOR=#{creator,jdbcType=VARCHAR}
		</if>
		<if test="belong != null and belong != ''">
			and R.BELONG=#{belong,jdbcType=VARCHAR}
		</if>
		<if test="notExistsRelationType != null and notExistsRelationType != '' and notExistsRelationId != null and notExistsRelationId != ''">
			and not exists (select 1 from RESOURCE_RELATION where RESOURCE_ID = R.ID and IS_DELETED = 'N' and RELATION_ID = #{notExistsRelationId} and type = #{notExistsRelationType} )
		</if>
		<if test="ids != null">
			and R.ID in 
			<foreach collection="ids" open="(" close=")" separator="," item="id">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="privilege != null and privilege != ''">
			and R.PRIVILEGE=#{privilege,jdbcType=VARCHAR}
		</if>
		<if test="relationIds != null and relationIds.size > 0">
			and exists (select 1 from RESOURCE_RELATION where RESOURCE_ID = R.ID
			and RELATION_ID in 
			<foreach collection="relationIds" open="(" close=")" item="item" separator=",">
				#{item}
			</foreach>)
		</if>
		<if test="relationId !=null and relationId != '' ">
			and RR.RELATION_ID = #{relationId,jdbcType=VARCHAR}
		</if>
		<if test="followCreator != null and followCreator!=''">
			and exists (select 1 from FOLLOW F where IS_DELETED = 'N' and FOLLOWED_ID = R.ID and CREATOR = #{followCreator})
		</if>
		<if test="creatorOrFollowCreator != null and creatorOrFollowCreator!=''">
			and (R.CREATOR = #{creatorOrFollowCreator} or exists (select 1 from FOLLOW F where IS_DELETED = 'N' and FOLLOWED_ID = R.ID and F.CREATOR = #{creatorOrFollowCreator}))
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
			R.ID,
			R.TITLE,
			R.SUMMARY,
			R.CREATOR,
			R.TYPE,
			R.CREATE_TIME,
			R.STATE,
			R.BELONG,
			R.PRIVILEGE,
			RR.ID RESOURCE_RELATION_ID,
			RR.RELATION_ID,
			RR.REPLY_NUM,
			RR.BROWSE_NUM,
			RR.DOWNLOAD_NUM,
			RR.FILE_NUM,
			RR.SUPPORT_NUM,
			RR.RELATION_ID,
			RR.TYPE RELATION_TYPE,
			(select BUV.REAL_NAME from BASE_USER_VIEW BUV where BUV.ID = R.CREATOR) REAL_NAME,
			F.ID FILE_INFO_ID,F.FILE_NAME FILE_INFO_NAME,F.URL FILE_INFO_URL,F.FILE_SIZE FILE_INFO_SIZE,
			RE.STAGE,RE.SUBJECT,RE.VERSION,RE.GRADE,RE.TB_VERSION,RE.CHAPTER,RE.SECTION,RE.AUTHOR,RE.ISSUE_DATE,RE.SOURCE,RE.B_INDEX,RE.EVALUATE_RESULT,RE.PRICE,RE.COVER_URL,RE.TYPE EXTEND_TYPE,RE.IS_ORIGINAL,RE.PREVIEW_URL
		from
			RESOURCES R
		join RESOURCE_RELATION RR on R.ID = RR.RESOURCE_ID
		and RR.IS_DELETED = 'N'
		left join FILE_RELATION FR on FR.RELATION_ID = R.ID and FR.TYPE = 'resources' and FR.IS_DELETED = 'N'
		left join FILE_INFO F on F.ID = FR.FILE_ID and F.IS_DELETED = 'N'
		left join RESOURCE_EXTEND RE on R.ID = RE.RESOURCE_ID
		where
			R.ID = #{id,jdbcType=VARCHAR}
	</select>
	<insert id="insert" parameterType="com.haoyu.tip.resource.entity.Resources">
		insert into RESOURCES
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="title != null">
				TITLE,
			</if>
			<if test="summary != null">
				SUMMARY,
			</if>
			<if test="type != null">
				TYPE,
			</if>
			<if test="creator != null and creator.id != null">
				CREATOR,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="updatedby != null and updatedby.id != null">
				UPDATEDBY,
			</if>
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="version != null">
				VERSION,
			</if>
			<if test="state != null">
				STATE,
			</if>
			<if test="belong != null and belong !='' ">
				BELONG,
			</if>
			<if test="privilege != null and privilege !='' ">
				PRIVILEGE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="title != null">
				#{title,jdbcType=VARCHAR},
			</if>
			<if test="summary != null">
				#{summary,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="creator != null and creator.id != null">
				#{creator.id,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=INTEGER},
			</if>
			<if test="updatedby != null and updatedby.id != null">
				#{updatedby.id,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=INTEGER},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=CHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=DECIMAL},
			</if>
			<if test="state!=null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="belong != null and belong !='' ">
				#{belong,jdbcType=VARCHAR},
			</if>
			<if test="privilege != null and privilege !='' ">
				#{privilege,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.haoyu.tip.resource.entity.Resources">
		update RESOURCES
		<set>
			<if test="title != null">
				TITLE = #{title,jdbcType=VARCHAR},
			</if>
			<if test="summary != null">
				SUMMARY = #{summary,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				TYPE = #{type,jdbcType=VARCHAR},
			</if>
			<if test="updatedby != null and updatedby.id != null">
				UPDATEDBY = #{updatedby.id,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				UPDATE_TIME = #{updateTime,jdbcType=INTEGER},
			</if>
			<if test="isDeleted != null">
				IS_DELETED = #{isDeleted,jdbcType=CHAR},
			</if>
			<if test="state != null">
				STATE = #{state,jdbcType=VARCHAR},
			</if>
			<if test="belong != null and belong !='' ">
				BELONG = #{belong,jdbcType=VARCHAR},
			</if>
			<if test="privilege != null and privilege !='' ">
				PRIVILEGE = #{privilege,jdbcType=VARCHAR},
			</if>
		</set>
		,VERSION = VERSION + 1
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="deleteByLogic" parameterType="com.haoyu.tip.resource.entity.Resources">
		update RESOURCES
		set IS_DELETED = 'Y', UPDATE_TIME = #{updateTime,jdbcType=INTEGER}
		<if test="updatedby != null and updatedby.id != null and updatedby.id != ''">
			,UPDATEDBY = #{updatedby.id,jdbcType=VARCHAR}
		</if>
		where ID = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByIds" parameterType="map">
		update RESOURCES R
		set UPDATE_TIME = #{entity.updateTime,jdbcType=INTEGER}
		<if test="updatedby != null">
			,UPDATEDBY = #{entity.id,jdbcType=VARCHAR}
		</if>
		<if test="entity!=null and entity.state!=null">
			,STATE = #{entity.state}
		</if>
		where ID in
		<foreach collection="ids" open="(" close=")" separator="," item="item">
			#{item}
		</foreach>
	</update>
	<update id="deleteByIds" parameterType="java.util.List">
		update RESOURCES R
		set IS_DELETED = 'Y'
		where ID in
		<foreach collection="list" open="(" close=")" separator="," item="item">
			#{item}
		</foreach>
	</update>
</mapper>