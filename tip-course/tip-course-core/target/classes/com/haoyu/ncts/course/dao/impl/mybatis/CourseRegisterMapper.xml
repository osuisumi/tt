<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.haoyu.ncts.course.dao.impl.mybatis.CourseRegisterMapper">
	<resultMap id="BaseResultMap" type="com.haoyu.ncts.course.entity.CourseRegister">
		<id column="ID" property="id" jdbcType="VARCHAR" />
		<result column="RELATION_ID" property="relation.id" jdbcType="VARCHAR" />
		<result column="STATE" property="state" jdbcType="VARCHAR" />
		<result column="TYPE" property="type" jdbcType="VARCHAR" />
		<result column="CREATOR" property="creator.id" jdbcType="VARCHAR" />
		<result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
		<result column="CREATOR" property="creator.id" jdbcType="VARCHAR" />
		
		<result column="USER_ID" property="user.id" jdbcType="VARCHAR" />
		<result column="REAL_NAME" property="user.realName" jdbcType="VARCHAR" />
		<result column="AVATAR" property="user.avatar" jdbcType="VARCHAR" />
		<result column="DEPT_NAME" property="user.deptName" jdbcType="VARCHAR" />
		
		<association property="course" javaType="com.haoyu.ncts.course.entity.Course">
			<id column="COURSE_ID" property="id" jdbcType="VARCHAR"/>
			<result column="COURSE_TITLE" property="title" jdbcType="VARCHAR"/>
			<result column="COURSE_IMAGE" property="image" jdbcType="VARCHAR"/>
			<result column="COURSE_STUDY_HOURS" property="studyHours" jdbcType="VARCHAR" />
			<result column="COURSE_CODE" property="code" jdbcType="VARCHAR" />
			<result column="COURSE_TERM_NO" property="termNo" jdbcType="VARCHAR"/>
			<result column="COURSE_TYPE" property="type" jdbcType="VARCHAR" />
			<result column="COURSE_ORGANIZATION" property="organization" jdbcType="VARCHAR"/>
			<result column="START_TIME" property="timePeriod.startTime" jdbcType="TIMESTAMP" />
			<result column="END_TIME" property="timePeriod.endTime" jdbcType="TIMESTAMP" />
			<result column="SOURCE_ID" property="sourceId" jdbcType="VARCHAR"/>
		</association>
	</resultMap>
	<resultMap type="map" id="CourseRegisterNumResult">
		<result column="ID" property="id" jdbcType="VARCHAR"/>
		<result column="NUM" property="num" jdbcType="DECIMAL"/>
	</resultMap>
	<sql id="BaseSelectSql">
		select CR.ID,CR.RELATION_ID,CR.USER_ID,CR.STATE,CR.TYPE,CR.CREATOR,CR.CREATE_TIME, 
		C.ID COURSE_ID,C.TITLE COURSE_TITLE,C.IMAGE COURSE_IMAGE,C.STUDY_HOURS COURSE_STUDY_HOURS,C.CODE COURSE_CODE,C.TERM_NO COURSE_TERM_NO,C.TYPE COURSE_TYPE,C.ORGANIZATION COURSE_ORGANIZATION,
		C.START_TIME, C.END_TIME, C.SOURCE_ID,
		BUV.REAL_NAME, BUV.AVATAR,BUV.DEPT_NAME
		from COURSE_REGISTER CR 
		join COURSE C on CR.COURSE_ID = C.ID and C.IS_DELETED = 'N'
		join BASE_USER_VIEW BUV on CR.USER_ID = BUV.ID
	</sql>
	<select id="select" parameterType="map" resultMap="BaseResultMap">
		<include refid="BaseSelectSql" />
		<if test="courseResultState != null and courseResultState != ''">
			left join COURSE_RESULT CRE on CRE.USER_ID = CR.USER_ID and CRE.COURSE_ID = CR.COURSE_ID
		</if>
		where CR.IS_DELETED = 'N'
		<if test="courseId != null and courseId != ''">
			and CR.COURSE_ID = #{courseId,jdbcType=VARCHAR}
		</if>
		<if test="courseIds != null">
			and CR.COURSE_ID in 
			<foreach collection="courseIds" open="(" close=")" item="cid" separator=",">
				#{cid,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="relationId != null and relationId != ''">
			and CR.RELATION_ID = #{relationId,jdbcType=VARCHAR}
		</if>
		<if test="state != null and state != ''">
			and CR.STATE = #{state,jdbcType=VARCHAR}
		</if>
		<if test="userId != null and userId != ''">
			and CR.USER_ID = #{userId,jdbcType=VARCHAR}
		</if>
		<if test="userIds != null and userIds != ''">
			and CR.USER_ID in 
			<foreach collection="userIds" open="(" close=")" item="item" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="courseResultState != null and courseResultState != ''">
			<choose>
				<when test="courseResultState == 'nopass'">
					and (CRE.STATE ='nopass' or CRE.STATE is null) 
				</when>
				<otherwise>
					and CRE.STATE = #{courseResultState,jdbcType=VARCHAR}
				</otherwise>
			</choose>
		</if>
		<if test="realName != null and realName != ''">
			and BUV.REAL_NAME like concat(concat('%',#{realName,jdbcType=VARCHAR}),'%')
		</if>
	</select>
	<select id="selectByPrimaryKey" parameterType="string" resultMap="BaseResultMap">
		<include refid="BaseSelectSql" /> 
		where CR.ID = #{id, jdbcType=VARCHAR}
	</select>
	<insert id="insert" parameterType="com.haoyu.ncts.course.entity.CourseRegister">
		insert into COURSE_REGISTER
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				ID,
			</if>
			<if test="course != null and course.id != null">
				COURSE_ID,
			</if>
			<if test="relation != null and relation.id != null">
				RELATION_ID,
			</if>
			<if test="user != null and user.id != null">
				USER_ID,
			</if>
			<if test="state != null">
				STATE,
			</if>
			<if test="type != null">
				TYPE,
			</if>
			<if test="clazz != null and clazz.id != null">
				CLASS_ID,
			</if>
			<if test="creator != null">
				CREATOR,
			</if>
			<if test="createTime != null">
				CREATE_TIME,
			</if>
			<if test="updatedby != null">
				UPDATEDBY,
			</if>
			<if test="updateTime != null">
				UPDATE_TIME,
			</if>
			<if test="isDeleted != null">
				IS_DELETED,
			</if>
			<if test="version != null">
				VERSION,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="course != null and course.id != null">
				#{course.id,jdbcType=VARCHAR},
			</if>
			<if test="relation != null and relation.id != null">
				#{relation.id,jdbcType=VARCHAR},
			</if>
			<if test="user != null and user.id != null">
				#{user.id,jdbcType=VARCHAR},
			</if>
			<if test="state != null">
				#{state,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=VARCHAR},
			</if>
			<if test="clazz != null and clazz.id != null">
				#{clazz.id,jdbcType=VARCHAR},
			</if>
			<if test="creator != null">
				#{creator.id,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updatedby != null">
				#{updatedby,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="isDeleted != null">
				#{isDeleted,jdbcType=VARCHAR},
			</if>
			<if test="version != null">
				#{version,jdbcType=DECIMAL},
			</if>
		</trim>
	</insert>
	
	<update id="update" parameterType="map">
		update COURSE_REGISTER CR
		set UPDATE_TIME = #{entity.updateTime,jdbcType=INTEGER}
			,UPDATEDBY = #{entity.updatedby.id,jdbcType=VARCHAR}
		<if test="entity!=null and entity.state!=null">
			,STATE = #{entity.state}
		</if>
		<if test="entity!=null and entity.clazz!=null and entity.clazz.id != null">
			,CLASS_ID = #{entity.clazz.id}
		</if>
		where ID in
		<foreach collection="ids" open="(" close=")" separator="," item="item">
			#{item}
		</foreach>
	</update>
	
	<update id="deleteByLogic" parameterType="map">
		update COURSE_REGISTER 
		set IS_DELETED = 'Y',
		UPDATE_TIME = #{entity.updateTime, jdbcType=TIMESTAMP},
		UPDATEDBY = #{entity.updatedby.id,jdbcType=VARCHAR}
		where ID in
		<foreach collection="ids" open="(" close=")" item="id" separator=",">
			#{id,jdbcType=VARCHAR}
		</foreach>
	</update>
	
	<delete id="deleteByPhysics" parameterType="java.lang.String">
		delete from COURSE_REGISTER
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	
	<delete id="delete" parameterType="map">
		delete from COURSE_REGISTER
		where
		<if test="ids != null">
			ID in
			<foreach collection="ids" open="(" close=")" item="id" separator=",">
				#{id,jdbcType=VARCHAR}
			</foreach>
		</if>
		<if test="userId != null and userId != '' and courseId != null and courseId != ''">
			USER_ID = #{userId} and COURSE_ID = #{courseId}
		</if>
	</delete>
	<select id="selectCount" parameterType="map" resultMap="CourseRegisterNumResult">
		select C.ID, 
		(select count(ID) from COURSE_REGISTER where COURSE_ID = C.ID and IS_DELETED = 'N'
			<if test="relationId != null and relationId != ''">
				and RELATION_ID = #{relationId} 
			</if>
			<if test="state != null and state != ''">
				and STATE = #{state} 
			</if>
		) NUM
		from COURSE C
		where C.IS_DELETED = 'N'
		<if test="courseIds != null">
			and C.ID in
			<foreach collection="courseIds" open="(" close=")" item="item" separator=",">
				#{item}
			</foreach>
		</if>
	</select>
	<select id="getCount" parameterType="map" resultType="int">
		select count(ID)
		from COURSE_RESGISTER 
		where IS_DELETED = 'N'
		<if test="relationId != null and relationId != ''">
			and RELATION_ID = #{relationId,jdbcType=VARCHAR}
		</if>
		<if test="state != null and state != ''">
			and STATE = #{state,jdbcType=VARCHAR}
		</if>
		<if test="userId != null and userId != ''">
			and USER_ID = #{userId,jdbcType=VARCHAR}
		</if>
	</select>
</mapper>